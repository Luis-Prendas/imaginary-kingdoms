datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  USER
  ADMIN
}

model User {
  id              String           @id @default(cuid())
  name            String?
  email           String           @unique
  emailVerified   DateTime?
  image           String?
  accounts        Account[]
  Rooms           Room[]
  characterSheets CharacterSheet[]
  password        String?
  role            Role             @default(USER)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  rooms Player[]
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Room {
  id      String   @id @default(cuid())
  name    String   @unique
  ownerId String
  owner   User     @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  players Player[] // Relación muchos a muchos a través de la tabla Player
}

model Player {
  roomId String
  userId String
  role   String // Puedes añadir un campo opcional para definir el rol del jugador en la sala

  room Room @relation(fields: [roomId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([roomId, userId])
}

model CharacterSheet {
  id          String   @id @default(cuid())
  name        String
  description String?
  level       String
  raza        String
  clase       String
  ownerId     String
  isPublic    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Details
  size              String @default("1.70m")
  speed             String @default("25tf")
  senses            String @default("Normalvision 60ft")
  languages         String @default("Common")
  passivePerception Int    @default(0)
  proficiencyBonus  Int    @default(0)
  armorClass        Int    @default(0)
  initiative        Int    @default(0)
  hitPoints         Int    @default(0)
  currentHitPoints  Int    @default(0)
  tempHitPoints     Int    @default(0)

  // Stats
  strength        Int @default(0)
  strengthMod     Int @default(0)
  dexterity       Int @default(0)
  dexterityMod    Int @default(0)
  constitution    Int @default(0)
  constitutionMod Int @default(0)
  intelligence    Int @default(0)
  intelligenceMod Int @default(0)
  wisdom          Int @default(0)
  wisdomMod       Int @default(0)
  charisma        Int @default(0)
  charismaMod     Int @default(0)

  // Savings Thorows
  autoCalculateSavingsThorows Boolean @default(true)
  savingStrength              Int     @default(0)
  competenceStrength          Boolean @default(false)
  savingDexterity             Int     @default(0)
  competenceDexterity         Boolean @default(false)
  savingConstitution          Int     @default(0)
  competenceConstitution      Boolean @default(false)
  savingIntelligence          Int     @default(0)
  competenceIntelligence      Boolean @default(false)
  savingWisdom                Int     @default(0)
  competenceWisdom            Boolean @default(false)
  savingCharisma              Int     @default(0)
  competenceCharisma          Boolean @default(false)

  // Skills
  autoCalculateSkills      Boolean @default(true)
  acrobatics               Int     @default(0)
  competenceAcrobatics     Boolean @default(false)
  animalHandling           Int     @default(0)
  competenceAnimalHandling Boolean @default(false)
  arcana                   Int     @default(0)
  competenceArcana         Boolean @default(false)
  athletics                Int     @default(0)
  competenceAthletics      Boolean @default(false)
  deception                Int     @default(0)
  competenceDeception      Boolean @default(false)
  history                  Int     @default(0)
  competenceHistory        Boolean @default(false)
  insight                  Int     @default(0)
  competenceInsight        Boolean @default(false)
  intimidation             Int     @default(0)
  competenceIntimidation   Boolean @default(false)
  investigation            Int     @default(0)
  competenceInvestigation  Boolean @default(false)
  medicine                 Int     @default(0)
  competenceMedicine       Boolean @default(false)
  nature                   Int     @default(0)
  competenceNature         Boolean @default(false)
  perception               Int     @default(0)
  competencePerception     Boolean @default(false)
  performance              Int     @default(0)
  competencePerformance    Boolean @default(false)
  persuasion               Int     @default(0)
  competencePersuasion     Boolean @default(false)
  religion                 Int     @default(0)
  competenceReligion       Boolean @default(false)
  sleightOfHand            Int     @default(0)
  competenceSleightOfHand  Boolean @default(false)
  stealth                  Int     @default(0)
  competenceStealth        Boolean @default(false)
  survival                 Int     @default(0)
  competenceSurvival       Boolean @default(false)

  owner User @relation(fields: [ownerId], references: [id], onDelete: Cascade)
}
