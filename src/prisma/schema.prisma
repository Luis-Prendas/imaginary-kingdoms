datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

/////////////////////////////////// ENUMS ////////////////////////////////////
enum Role {
  USER
  ADMIN
}

enum StatType {
  STRENGTH
  DEXTERITY
  CONSTITUTION
  INTELLIGENCE
  WISDOM
  CHARISMA
}

enum SkillType {
  ACROBATICS
  ANIMAL_HANDLING
  ARCANA
  ATHLETICS
  DECEPTION
  HISTORY
  INSIGHT
  INTIMIDATION
  INVESTIGATION
  MEDICINE
  NATURE
  PERCEPTION
  PERFORMANCE
  PERSUASION
  RELIGION
  SLEIGHT_OF_HAND
  STEALTH
  SURVIVAL
}

enum ArmorType {
  LIGHT
  MEDIUM
  HEAVY
}

enum Rarity {
  COMMON
  UNCOMMON
  RARE
  VERY_RARE
  LEGENDARY
}

enum ObjType {
  ARMOR
}

/////////////////////////////////// MODELS ////////////////////////////////////
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          Role      @default(USER)

  characterSheets CharacterSheet[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CharacterSheet {
  id        String   @id @default(cuid())
  ownerId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // General Info
  name              String  @default("New Character")
  description       String? @default("New Character Description")
  level             Int     @default(1)
  race              String  @default("human")
  class             String  @default("barbarian")
  armorClass        Int     @default(0)
  initiative        Int     @default(0)
  hitPoints         Int     @default(0)
  currentHitPoints  Int     @default(0)
  tempHitPoints     Int     @default(0)
  size              String  @default("1.70m")
  speed             String  @default("25tf")
  senses            String  @default("Normal 60ft")
  languages         String  @default("Common")
  passivePerception Int     @default(0)
  proficiencyBonus  Int     @default(0)

  // Foreign keys
  stats        Stat[]
  skills       Skill[]
  savingThrows SavingThrow[]
  Inventory    Inventory[]
  owner        User          @relation(fields: [ownerId], references: [id], onDelete: Cascade)
}

model Stat {
  id               String          @id @default(cuid())
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  order            Int
  statType         StatType
  value            Int             @default(0)
  modifier         Int             @default(0)
  CharacterSheet   CharacterSheet? @relation(fields: [characterSheetId], references: [id])
  characterSheetId String?
}

model Skill {
  id               String          @id @default(cuid())
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  order            Int
  skillType        SkillType
  statType         StatType
  value            Int             @default(0)
  proficiency      Boolean         @default(false)
  CharacterSheet   CharacterSheet? @relation(fields: [characterSheetId], references: [id])
  characterSheetId String?
}

model SavingThrow {
  id               String          @id @default(cuid())
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  order            Int
  statType         StatType
  value            Int             @default(0)
  proficiency      Boolean         @default(false)
  CharacterSheet   CharacterSheet? @relation(fields: [characterSheetId], references: [id])
  characterSheetId String?
}

model Inventory {
  // Standard
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Fields
  characterSheetId String?
  objectItemId     String?
  note             String?

  // Foreign keys
  characterSheet CharacterSheet? @relation(fields: [characterSheetId], references: [id])
  objectItem     ObjectItem?     @relation(fields: [objectItemId], references: [id])
}

model ObjectItem {
  // Standard
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Default fields
  objType     ObjType
  name        String
  description String
  weight      Float   @default(0)
  price       Float   @default(0)
  rarity      Rarity  @default(COMMON)
  isEquipped  Boolean @default(false)

  // Armor fields
  armorType         ArmorType?
  armorClass        String?
  armorRequirements String?

  // Foreign keys
  Inventory Inventory[]
}
